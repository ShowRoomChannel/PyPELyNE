# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.6
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_HDRLightStudioLive', [dirname(__file__)])
        except ImportError:
            import _HDRLightStudioLive
            return _HDRLightStudioLive
        if fp is not None:
            try:
                _mod = imp.load_module('_HDRLightStudioLive', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _HDRLightStudioLive = swig_import_helper()
    del swig_import_helper
else:
    import _HDRLightStudioLive
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


HDRLS_LIVE_CURRENT_VERSION = _HDRLightStudioLive.HDRLS_LIVE_CURRENT_VERSION
HDRLS_ERRORBIT = _HDRLightStudioLive.HDRLS_ERRORBIT
HDRLS_OK = _HDRLightStudioLive.HDRLS_OK
HDRLS_FAILED = _HDRLightStudioLive.HDRLS_FAILED
HDRLS_NOT_INTIALISED = _HDRLightStudioLive.HDRLS_NOT_INTIALISED
HDRLS_NO_INTERFACE = _HDRLightStudioLive.HDRLS_NO_INTERFACE
HDRLS_PARAM_ERROR = _HDRLightStudioLive.HDRLS_PARAM_ERROR
HDRLS_STRING_TOO_LONG = _HDRLightStudioLive.HDRLS_STRING_TOO_LONG
HDRLS_BUFFER_TOO_SHORT = _HDRLightStudioLive.HDRLS_BUFFER_TOO_SHORT
HDRLS_UNSUPPORTED_VERSION = _HDRLightStudioLive.HDRLS_UNSUPPORTED_VERSION
HDRLS_OUTOFMEMORY = _HDRLightStudioLive.HDRLS_OUTOFMEMORY
HDRLS_UNKNOWN_MESSAGE = _HDRLightStudioLive.HDRLS_UNKNOWN_MESSAGE
HDRLS_CRITICAL_INTERNAL_ERR = _HDRLightStudioLive.HDRLS_CRITICAL_INTERNAL_ERR
HDRLS_BAD_SETTINGS = _HDRLightStudioLive.HDRLS_BAD_SETTINGS
HDRLS_CANNOT_DO_FUNCTION_NOW = _HDRLightStudioLive.HDRLS_CANNOT_DO_FUNCTION_NOW
HDRLS_UNLICENSED = _HDRLightStudioLive.HDRLS_UNLICENSED
HDRLS_FILE_NOT_FOUND = _HDRLightStudioLive.HDRLS_FILE_NOT_FOUND
HDRLS_INVALID_FILE_FORMAT = _HDRLightStudioLive.HDRLS_INVALID_FILE_FORMAT
HDRLS_COMMS_TIMEOUT = _HDRLightStudioLive.HDRLS_COMMS_TIMEOUT
HDRLS_INVALID_PROJECT_ASSET = _HDRLightStudioLive.HDRLS_INVALID_PROJECT_ASSET
HDRLS_FAILED_TO_LOAD_ASSET = _HDRLightStudioLive.HDRLS_FAILED_TO_LOAD_ASSET
HDRLS_NO_NODE_SELECTED = _HDRLightStudioLive.HDRLS_NO_NODE_SELECTED
HDRLS_NO_COMMS = _HDRLightStudioLive.HDRLS_NO_COMMS
HDRLS_BAD_COMMS_REPLY = _HDRLightStudioLive.HDRLS_BAD_COMMS_REPLY
HDRLS_COMMS_ERROR = _HDRLightStudioLive.HDRLS_COMMS_ERROR
HDRLS_CANNOT_START_PROCESS = _HDRLightStudioLive.HDRLS_CANNOT_START_PROCESS
HDRLS_ALREADY_INITIALISED = _HDRLightStudioLive.HDRLS_ALREADY_INITIALISED
HDRLS_UNKNOWN_HOSTRENDERER = _HDRLightStudioLive.HDRLS_UNKNOWN_HOSTRENDERER
HDRLS_UNKNOWN_ERROR = _HDRLightStudioLive.HDRLS_UNKNOWN_ERROR
HDRLS_RAWFORMAT_F32_RGBA = _HDRLightStudioLive.HDRLS_RAWFORMAT_F32_RGBA

def InitialiseHdrLightStudio(*args):
  return _HDRLightStudioLive.InitialiseHdrLightStudio(*args)
InitialiseHdrLightStudio = _HDRLightStudioLive.InitialiseHdrLightStudio

def SetRawHdrFileUpdateCb(*args):
  return _HDRLightStudioLive.SetRawHdrFileUpdateCb(*args)
SetRawHdrFileUpdateCb = _HDRLightStudioLive.SetRawHdrFileUpdateCb

def SetProductionRenderFileUpdateCb(*args):
  return _HDRLightStudioLive.SetProductionRenderFileUpdateCb(*args)
SetProductionRenderFileUpdateCb = _HDRLightStudioLive.SetProductionRenderFileUpdateCb

def SetCurrentNodeMovedCb(*args):
  return _HDRLightStudioLive.SetCurrentNodeMovedCb(*args)
SetCurrentNodeMovedCb = _HDRLightStudioLive.SetCurrentNodeMovedCb

def ShowMainInterface():
  return _HDRLightStudioLive.ShowMainInterface()
ShowMainInterface = _HDRLightStudioLive.ShowMainInterface

def HideMainInterface():
  return _HDRLightStudioLive.HideMainInterface()
HideMainInterface = _HDRLightStudioLive.HideMainInterface

def EnableMainInterface():
  return _HDRLightStudioLive.EnableMainInterface()
EnableMainInterface = _HDRLightStudioLive.EnableMainInterface

def DisableMainInterface():
  return _HDRLightStudioLive.DisableMainInterface()
DisableMainInterface = _HDRLightStudioLive.DisableMainInterface

def Exit():
  return _HDRLightStudioLive.Exit()
Exit = _HDRLightStudioLive.Exit

def SetSettings(*args):
  return _HDRLightStudioLive.SetSettings(*args)
SetSettings = _HDRLightStudioLive.SetSettings

def IsRunning():
  return _HDRLightStudioLive.IsRunning()
IsRunning = _HDRLightStudioLive.IsRunning

def IsVisible():
  return _HDRLightStudioLive.IsVisible()
IsVisible = _HDRLightStudioLive.IsVisible

def LoadProject(*args):
  return _HDRLightStudioLive.LoadProject(*args)
LoadProject = _HDRLightStudioLive.LoadProject

def SaveProject():
  return _HDRLightStudioLive.SaveProject()
SaveProject = _HDRLightStudioLive.SaveProject

def ForceRender():
  return _HDRLightStudioLive.ForceRender()
ForceRender = _HDRLightStudioLive.ForceRender

def UpdateBackgroundHdrImage(*args):
  return _HDRLightStudioLive.UpdateBackgroundHdrImage(*args)
UpdateBackgroundHdrImage = _HDRLightStudioLive.UpdateBackgroundHdrImage

def PositionCurrentlySelectedNode(*args):
  return _HDRLightStudioLive.PositionCurrentlySelectedNode(*args)
PositionCurrentlySelectedNode = _HDRLightStudioLive.PositionCurrentlySelectedNode

def SelectNodeViaEnvMapUV(*args):
  return _HDRLightStudioLive.SelectNodeViaEnvMapUV(*args)
SelectNodeViaEnvMapUV = _HDRLightStudioLive.SelectNodeViaEnvMapUV

def GetHostRenderers():
  return _HDRLightStudioLive.GetHostRenderers()
GetHostRenderers = _HDRLightStudioLive.GetHostRenderers

def SetHostRenderer(*args):
  return _HDRLightStudioLive.SetHostRenderer(*args)
SetHostRenderer = _HDRLightStudioLive.SetHostRenderer

def SetHostRendererTransform(*args):
  return _HDRLightStudioLive.SetHostRendererTransform(*args)
SetHostRendererTransform = _HDRLightStudioLive.SetHostRendererTransform

def ToggleLightPaintMode(*args):
  return _HDRLightStudioLive.ToggleLightPaintMode(*args)
ToggleLightPaintMode = _HDRLightStudioLive.ToggleLightPaintMode

def LoadScene(*args):
  return _HDRLightStudioLive.LoadScene(*args)
LoadScene = _HDRLightStudioLive.LoadScene
# This file is compatible with both classic and new-style classes.


